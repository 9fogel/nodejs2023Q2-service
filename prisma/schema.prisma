// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  login     String
  password  String
  version   Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Artist {
  id        String      @id @default(uuid())
  name      String
  grammy    Boolean
  // favorites   Favorites? @relation("favArtist", fields: [favoritesId], references: [id], onDelete: Cascade)
  // favoritesId String?
  tracks    Track[]
  albums    Album[]
  FavArtist FavArtist[]
}

model Track {
  id       String     @id @default(uuid())
  name     String
  artistId String?
  albumId  String?
  duration Int
  // favorites   Favorites? @relation("favAlbum", fields: [favoritesId], references: [id], onDelete: Cascade)
  // favoritesId String?
  artist   Artist?    @relation(fields: [artistId], references: [id], onDelete: SetNull)
  album    Album?     @relation(fields: [albumId], references: [id], onDelete: SetNull)
  FavTrack FavTrack[]
}

model Album {
  id       String     @id @default(uuid())
  name     String
  year     Int
  artistId String?
  // favorites   Favorites? @relation("favAlbum", fields: [favoritesId], references: [id], onDelete: Cascade)
  // favoritesId String?
  artist   Artist?    @relation(fields: [artistId], references: [id], onDelete: SetNull)
  tracks   Track[]
  FavAlbum FavAlbum[]
}

// model Favorites {
//   id      String   @id @default(uuid())
//   artists Artist[] @relation("favArtist")
//   albums  Album[] @relation("favAlbum")
//   tracks  Track[] @relation("favAlbum")
// }

model FavArtist {
  artist   Artist @relation(fields: [artistId], references: [id])
  artistId String @unique
}

model FavTrack {
  track   Track  @relation(fields: [trackId], references: [id])
  trackId String @unique
}

model FavAlbum {
  album   Album  @relation(fields: [albumId], references: [id])
  albumId String @unique
}
